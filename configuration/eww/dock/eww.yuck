;; doebox/dock
;; based on eww
;; for licensing and info refer to avdandoe/doebox

(defvar volumePercentage 0)

(defvar dockstatusRollupBool false)

(defpoll pollerTime :interval "1s"
    'date +%H:%M '
)

(defpoll pollerDate :interval "1s"
    'date "+%A, %B %d"'
)

(defpoll pollerVolume :interval "3s"
    'sh ./scripts/grabvolume.sh'
)

(defpoll pollerBluetooth :interval "3s"
    'sh ./scripts/grabbluetooth.sh'
)

(defpoll pollerWifi :interval "3s"
    'sh ./scripts/grabwifi.sh'
)

(defpoll pollerTheme :interval "3600s"
    'sh ./scripts/settheme.sh'
)

(defpoll internalUname :interval "900s"
    'whoami'
)

(defwindow dockdynamic
    :windowtype "dock"
    :geometry (geometry
                :x "-23%"
                :y "-1%"
                :width "33%"
                :height "6%"
                :anchor "bottom center")
    (dockdynamic_layout)
)

(defwindow dockmain
    :windowtype "dock"
    :geometry (geometry
                :x "0%"
                :y "-1%"
                :width "11%"
                :height "6%"
                :anchor "bottom center")
                :reserve (struts :distance "8%" :side "bottom")
    (dockmain_layout)
)

(defwindow dockstatic
    :windowtype "dock"
    :geometry (geometry
                :x "15%"
                :y "-1%"
                :width "17%"
                :height "6%"
                :anchor "bottom center")
    (dockstatic_layout)
)

(defwindow dockstatus
    :windowtype "dock"
    :geometry (geometry
                :x "32%"
                :y "-1%"
                :width "15%"
                :height "6%"
                :anchor "bottom center")
    (dockstatus_layout)
)

(defwindow dockstatus_rollup
    :windowtype "dock"
    :geometry (geometry
                :x "32%"
                :y "-8%"
                :width "15%"
                :height "18%"
                :anchor "bottom center")
    (dockstatus_rollup_layout)
)

(defwidget dockmain_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
            (callAppLeft)
            (callDashboard)
            (callAppRight)
    )
)

(defwidget dockstatic_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
                (box
                    :class "textBoxGeneric"
                    :orientation "vertical"
                        (label 
                            :class "textNormalGeneric"
                            :text "${pollerTime}"
                            :valign "end"
                        )
                        (label
                            :class "textSubnormalGeneric"
                            :text "${pollerDate}"
                            :valign "start"
                        )
                )
            
    )
)

(defwidget dockstatus_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
            (label :text "")
            (iconWifi)
            (iconBluetooth)
            (iconVolume)
            (iconSettings)
            (iconExpand)
            (label :text "")
    )
)

(defwidget dockstatus_rollup_layout []
    (revealer
        :transition "crossfade"
        :reveal "${dockstatusRollupBool}"
            (box
                :orientation "vertical"
                :class "boxGeneric"
                    (box
                        :orientation "horizontal"
                        :class "layoutBoxGeneric"
                            (buttonWifi)
                            (buttonBluetooth)
                    )
                    (box
                        :orientation "horizontal"
                        :class "layoutBoxGeneric"
                            (buttonDND)
                            (buttonThemeToggle)
                    )
                    (label 
                        :markup "Hey there ${internalUname}."
                    )
            )
    )
)

(defwidget dockdynamic_layout []
    (box
        :class "boxGeneric"
            (label 
                :markup "${pollerTheme} <b>AvdanDOE</b>: <span font_family='monospace'>DevPre1</span> on <span font_family='monospace'>DOEBox v1lune</span> 󰌾 "
            )
    )
)

(defwidget callAppRight []
    (box
        :class "appBoxGeneric"
            (button 
                :class "appIconGeneric"
                :onclick "google-chrome-stable&&disown"
                "󰊯"
            )
    )
)

(defwidget callAppLeft []
    (box
        :class "appBoxGeneric"
            (button
                :class "appIconGeneric"
                :onclick "cutefish-terminal&&disown"
                "󰆍"
            )
    )
)

(defwidget callDashboard []
    (box
        :class "appBoxGeneric"
            (eventbox
                :onclick "cutefish-launcher&&disown"
                    (image 
                        :class "appImageGeneric"
                        :path "../globalassets/avlogo.svg" 
                        :image-width 32
                    )
            )

    )
)

(defwidget iconWifi []
    (box
        :class "iconBoxGeneric"
            (button
                :tooltip "Wi-Fi" 
                :class "iconSmallGeneric" 
                :onclick "cutefish-settings -m wifi&&disown" 
                "${pollerWifi}"
            )
    )
)

(defwidget iconBluetooth []
    (box
        :class "iconBoxGeneric"
            (button 
                :tooltip "Bluetooth" 
                :class "iconSmallGeneric" 
                :onclick "cutefish-settings -m bluetooth&&disown" 
                "${pollerBluetooth}"
            )
    )
)

(defwidget iconVolume []
    (eventbox
        :onhover "${EWW_CMD} update volumePercentage=$(pamixer --get-volume)"
        :onscroll "sh ./scripts/setvolume.sh {}"
            (box
                :class "iconBoxGeneric"
                    (button 
                        :tooltip "Volume: ${volumePercentage}%" 
                        :class "iconSmallGeneric" 
                        :onclick "cutefish-settings -m sound&&disown" 
                        "${pollerVolume}"
                    )
            )
    )
)

(defwidget iconSettings []
    (box
        :class "iconBoxGeneric"
            (button 
                :tooltip "Settings" 
                :class "iconSmallGeneric" 
                :onclick "cutefish-settings&&disown" 
                "󰒓"
            )
    )
)

(defwidget iconExpand []
    (box
        :class "iconBoxGeneric"
            (button 
                :tooltip "Expand rollup" 
                :class "iconSmallGeneric" 
                :onclick "if [ `${EWW_CMD} get dockstatusRollupBool` == 'false' ]; then ${EWW_CMD} open dockstatus_rollup && ${EWW_CMD} update dockstatusRollupBool=true; else ${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; fi"
                "󰾍"
            )
    )
)

(defwidget buttonWifi []
    (box
        :class "buttonBoxRollup"
        :style "margin: 8 4 4 8;"
            (button
                :tooltip "Wi-Fi"
                :class "iconGeneric"
                :onclick "cutefish-settings -m wlan&&disown"
                "${pollerWifi}"
            )
    )
)

(defwidget buttonBluetooth []
    (box
        :class "buttonBoxRollup"
        :style "margin: 8 8 4 4;"
            (button
                :tooltip "Bluetooth" 
                :class "iconSmallGeneric" 
                :onclick "cutefish-settings -m bluetooth&&disown" 
                "${pollerBluetooth}"
            )
    )
)

(defwidget buttonDND []
    (box
        :class "buttonBoxRollup"
        :style "margin: 4 4 4 8;"
            (button
                :tooltip "Do not Disturb"
                :class "iconGeneric"
                :onclick "cutefish-settings -m notifications&&disown"
                "󰍷"
            )
    )
)

(defwidget buttonThemeToggle []
    (box
        :class "buttonBoxRollup"
        :style "margin: 4 8 4 4;"
            (button
                :tooltip "Appearance"
                :class "iconGeneric"
                :onclick "cutefish-settings -m appearance&&disown"
                "󱎖"
            )
    )
)