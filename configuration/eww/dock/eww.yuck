;; doebox/dock
;; based on eww
;; for licensing and info refer to avdandoe/doebox

;; list pollers

(defpoll time :interval "1s"
    'date +%H:%M '
)

(defpoll curdate :interval "1s"
    'date "+%A, %B %d"'
)

;; end pollers



;; list windows

(defwindow dockdynamic
    :windowtype "dock"
    :geometry (geometry
                :x "-23%"
                :y "-1%"
                :width "33%"
                :height "6%"
                :anchor "bottom center")
                :stacking "bg"
    (dockdynamic_layout)
)


(defwindow dockmain
    :windowtype "dock"
    :geometry (geometry
                :x "0%"
                :y "-1%"
                :width "11%"
                :height "6%"
                :anchor "bottom center")
                :reserve (struts :distance "8%" :side "bottom")
    (dockmain_layout)
)


(defwindow dockstatic
    :windowtype "dock"
    :geometry (geometry
                :x "15%"
                :y "-1%"
                :width "17%"
                :height "6%"
                :anchor "bottom center")
    (dockstatic_layout)
)


(defwindow dockstatus
    :windowtype "dock"
    :geometry (geometry
                :x "32%"
                :y "-1%"
                :width "15%"
                :height "6%"
                :anchor "bottom center")
    (dockstatus_layout)
)

;; end windows



;; def layouts

(defwidget dockmain_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
            (callAppLeft)
            (callDashboard)
            (callAppRight)
    )
)

(defwidget dockstatic_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
            (timeDate)
    )
)

(defwidget dockstatus_layout []
    (box
        :orientation "horizontal"
        :class "boxGeneric"
        :spacing -100
            (iconWifi)
            (iconBluetooth)
            (iconVolume)
            (iconSettings)
            (iconExpand)
    )
)

(defwidget dockdynamic_layout []
    (box
        :class "boxGeneric"
            (label :markup "AvdanOS Alpha: Running <span font_family='monospace'> AvdanDOE 0.2 Public </span> on <span font_family='monospace'> DOEBox v1lune </span> 󰌾 ")
    )
)

;; end layouts



;; def microwidgets

;; ;; main dock

(defwidget callAppRight []
    (box
        :class "appBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "appIconGeneric" :onclick "google-chrome-stable&&disown" "󰊯")
    )
)

(defwidget callAppLeft []
    (box
        :class "appBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "appIconGeneric" :onclick "xfce4-terminal --working-directory=~&&disown" "󰆍")
    )
)

(defwidget callDashboard []
    (box
        :class "appBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "appIconGeneric" :onclick "rofi -show drun&&disown" "󰊱")
    )
)

;; ;; end main dock

;; ;; dynamic dock

(defwidget timeDate []
    (box
        :class "textBoxGeneric"
        :vexpand "false"
        :hexpand "false"
        :orientation "vertical"
        :spacing -15
            (label :class "textNormalGeneric" :text "${time}")
            (label :class "textSubnormalGeneric" :text "${curdate}")
    )
)

;; ;; end dynamic dock

;; ;; status dock

(defwidget iconWifi []
    (box
        :class "iconBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "iconSmallGeneric" :onclick "echo something wifi&&disown" "󱚾")
    )
)

(defwidget iconBluetooth []
    (box
        :class "iconBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "iconSmallGeneric" :onclick "blueberry&&disown" "󰂯")
    )
)

(defwidget iconVolume []
    (box
        :class "iconBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "iconSmallGeneric" :onclick "echo something battery&&disown" "󱟨")
    )
)

(defwidget iconSettings []
    (box
        :class "iconBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "iconSmallGeneric" :onclick "xfce4-settings-manager&&disown" "󰒓")
    )
)

(defwidget iconExpand []
    (box
        :class "iconBoxGeneric"
        :vexpand "false"
        :hexpand "false"
            (button :class "iconSmallGeneric" :onclick "echo later" "󰮫")
    )
)

;; end microwidgets