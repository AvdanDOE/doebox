;; doebox/dock v1lune
;; based on eww
;; for licensing and info refer to avdandoe/doebox

(include "./pollers.yuck")
(include "./windows.yuck")
(include "./props.yuck")

(defvar dockstatusRollupBool false)
(defvar dockmainRollupBool false)
(defvar calendarRollupBool false)

(defwidget dockmain_layout []
    (overlay
        (box
            :class "boxGeneric"     
        )
        (box
            :orientation "horizontal"
            :class "boxGenericOpaque"
                (callAppLeft)
                (callDashboard)
                (callAppRight)
        )
    )
)

(defwidget dockmain_rollup_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (revealer
            :transition "crossfade"
            :reveal "${dockmainRollupBool}"
                (box
                    :orientation "vertical"
                    :class "boxGenericOpaque"
                        (mruSubSection)
                )
        )
    )
)

(defwidget dockstatic_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (box
            :class "boxGenericOpaque"
            :orientation "vertical"
                (label
                    :style "font-size: ${18*(scaleFactor/100)}"
                    :text "${pollerTime}"
                    :valign "end"
                )
                (eventbox
                    :onclick "if [ `${EWW_CMD} get calendarRollupBool` == 'false' ]; then ${EWW_CMD} open dockstatic_rollup && ${EWW_CMD} update calendarRollupBool=true; else ${EWW_CMD} update calendarRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatic_rollup; fi"
                        (label
                            :style "font-size: ${16*(scaleFactor/100)}"
                            :text "${pollerDate}"
                            :valign "start"
                        )
                )
        )
    )
)

(defwidget dockstatus_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (box
            :orientation "horizontal"
            :class "boxGenericOpaque"
                (label :text "")
                (statusGenericIcon
                    :tt "Wi-Fi"
                    :action "cutefish-settings -m wifi&&disown"
                    :icon "${pollerWifi}"
                )
                (statusGenericIcon
                    :tt "Bluetooth"
                    :action "cutefish-settings -m bluetooth&&disown"
                    :icon "${pollerBluetooth}"
                )
                (eventbox
                    :onhover "${EWW_CMD} update volumePercentage=$(pamixer --get-volume)"
                    :onscroll "sh ./scripts/setvolume.sh {}"
                    (statusGenericIcon
                        :tt "Volume: ${volumePercentage}%" 
                        :action "cutefish-settings -m sound&&disown"
                        :icon "󰕾"
                    )
                )
                (statusGenericIcon
                    :tt "Settings"
                    :action "cutefish-settings&&disown"
                    :icon "󰒓"
                )
                (statusGenericIcon
                    :tt "Rollup"
                    :action "if [ `${EWW_CMD} get dockstatusRollupBool` == 'false' ]; then ${EWW_CMD} open dockstatus_rollup && ${EWW_CMD} update dockstatusRollupBool=true; else ${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; fi"
                    :icon "󰾍"
                )
                (label :text "")
        )
    )
)

(defwidget dockstatus_rollup_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (revealer
            :transition "crossfade"
            :reveal "${dockstatusRollupBool}"
                (box
                    :orientation "vertical"
                    :class "boxGenericOpaque"
                        (box
                            :orientation "horizontal"
                            :class "layoutboxGenericOpaque"
                                (statusRollupButton
                                    :margins "8 4 4 8"
                                    :tt "Wi-Fi"
                                    :action "${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; cutefish-settings -m wifi&&disown"
                                    :icon "${pollerWifi}"
                                )
                                (statusRollupButton
                                    :margins "8 8 4 4"
                                    :tt "Bluetooth"
                                    :action "${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; cutefish-settings -m bluetooth&&disown"
                                    :icon "${pollerBluetooth}"
                                )
                        )
                        (box
                            :orientation "horizontal"
                            :class "layoutboxGenericOpaque"
                                (statusRollupButton
                                    :margins "4 4 4 8"
                                    :tt "Do not Disturb"
                                    :action "${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; cutefish-settings -m notifications&&disown"
                                    :icon "󰍷"
                                )
                                (statusRollupButton
                                    :margins "4 8 4 4"
                                    :tt "Change theme"
                                    :action "${EWW_CMD} update dockstatusRollupBool=false; sleep 0.1; ${EWW_CMD} close dockstatus_rollup; cutefish-settings -m appearance&&disown"
                                    :icon "󱎖"
                                )
                        )
                        (box
                            :orientation "horizontal"
                            :class "layoutboxGenericOpaque"
                                (overlay
                                    (scale
                                        :class "volumeBar"
                                        :min 0
                                        :max 101
                                        :orientation "h"
                                        :round-digits 0
                                        :value volumePercentage
                                        :onchange "pamixer --set-volume {}"
                                    )
                                    (label 
                                        :text "󰕾" 
                                        :style "font-size: ${24*(scaleFactor/100)}"
                                        :class "buttonRollup"
                                    )
                                )
                                (overlay
                                    (scale
                                        :class "brightnessBar"
                                        :min 0
                                        :max "${maxBrightness}"
                                        :orientation "h"
                                        :round-digits 0
                                        :value brightnessPercentage
                                        :onchange "brightnessctl set {}"
                                    )
                                    (label 
                                        :text "󰃠" 
                                        :style "font-size: ${24*(scaleFactor/100)}"
                                        :class "buttonRollup"
                                    )
                                )
                        )
                )
        )
    )
)

(defwidget dockdynamic_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (box
            :class "boxGenericOpaque"
                (overlay
                    (box
                        (label
                            :text "avdandoe_v1lune-dp2 󰍁"
                            :style "font-size: ${16*(scaleFactor/100)}"
                        )
                        (button
                            :style "font-size: ${16*(scaleFactor/100)}"
                            :onclick "echo a"
                            "Application Settings 󱕷"
                        )
                    )
                )
        )
    )
)

(defwidget dockstatic_rollup_layout []
    (overlay
        (box
            :class "boxGeneric"
        )
        (revealer
            :transition "crossfade"
            :reveal "${calendarRollupBool}"
                (calendar
                    :style "font-size: ${16*(scaleFactor/100)}"
                    :show-details false
                    :show-heading true
                    :show-day-names true
                    :day "${pollerDateDay}"
                    :month "${pollerDateMonth}"
                    :year "${pollerDateYear}"
                )
        )
    )
)

(defwidget callAppRight []
    (box
        :class "appboxGenericOpaque"
            (eventbox
                :cursor "pointer"
                    (button 
                        :style "font-size: ${32*(scaleFactor/100)}"
                        :onclick "echo placeholder"
                        :timeout "4s"
                        "󱟲"
                    )
            )
    )
)

(defwidget callAppLeft []
    (box
        :class "appboxGenericOpaque"
            (eventbox
                :cursor "pointer"
                    (button
                        :style "font-size: ${32*(scaleFactor/100)}"
                        :onclick "cutefish-terminal&&disown"
                        :timeout "4s"
                        "󰆍"
                    )
            )
    )
)

(defwidget callDashboard []
    (box
        :class "appboxGenericOpaque"
            (eventbox
                :onclick "if [ `${EWW_CMD} get dockmainRollupBool` == 'false' ]; then ${EWW_CMD} open dockmain_rollup && ${EWW_CMD} update dockmainRollupBool=true; else ${EWW_CMD} update dockmainRollupBool=false&& sleep 0.1&& ${EWW_CMD} close dockmain_rollup; fi"
                :cursor "pointer"
                :timeout "4s"
                    (image 
                        :style "font-size: ${32*(scaleFactor/100)}"
                        :path "../globalassets/avlogo.svg" 
                        :image-width "${32*(scaleFactor/100)}"
                    )
            )
    )
)

(defwidget statusGenericIcon [tt action icon]
    (box
        :class "iconboxGenericOpaque"
            (button 
                :tooltip "${tt}"
                :style "font-size: ${20*(scaleFactor/100)}"
                :onclick "${action}"
                :timeout "4s"
                "${icon}"
            )
    )
)

(defwidget statusRollupButton [margins tt action icon ?acc]
    (box
        :class "buttonBoxRollup"
        :style "margin: ${margins};"
            (eventbox
                :cursor "pointer"
                    (button
                        :tooltip "${tt}"
                        :style "font-size: ${24*(scaleFactor/100)}"
                        :onclick "${action}"
                        :timeout "4s"
                        "${icon}"
                    )
            )
    )
)

(defwidget mruSubSection []
    (box
        :orientation "horizontal"
            (mruSubProfile)
            (mruSubPowermenu)
            (mruSubDrivespace)
    )
)

(defwidget mruSubProfile []
    (box
        :space-evenly false
        :spacing 5
            (box
                :class "roundedProfileImage"
            )
            (label
                :halign "start"
                :text "${internalUname}"
                :style "font-size: ${16*(scaleFactor/100)}"
            )
            (label :text "")
    )
)

(defwidget mruSubPowermenu []
    (box
        (mruSubButton 
            :action "${EWW_CMD} update dockmainRollupBool=false&& sleep 0.1&& ${EWW_CMD} close dockmain_rollup&& cutefish-settings&&disown" 
            :icon "󰒓"
        )
        (mruSubButton 
            :action "${EWW_CMD} update dockmainRollupBool=false&& sleep 0.1&& ${EWW_CMD} close dockmain_rollup&& cutefish-shutdown&&disown" 
            :icon "󰐥"
        )
        (mruSubButton 
            :action "${EWW_CMD} update dockmainRollupBool=false&& sleep 0.1&& ${EWW_CMD} close dockmain_rollup&& cutefish-launcher&&disown" 
            :icon "󰀻"
        )
    )
)

(defwidget mruSubButton [icon action]
    (box
        (eventbox
            :cursor "pointer"
                (button 
                    :style "font-size: ${24*(scaleFactor/100)}"
                    :onclick "${action}" 
                    :timeout "4s"
                    "${icon}"
                )
        )
    )
)

(defwidget mruSubDrivespace []
    (box
        :orientation "vertical"
            (label 
                :style "font-size: ${16*(scaleFactor/100)}"
                :text "󰋊 ${round(EWW_DISK["/"].used/1073741824, 1)} GiB/${round(EWW_DISK["/"].total/1073741824, 1)} GiB"
                :valign "end"
            )
            (scale
                :class "diskBar"
                :value "${round(EWW_DISK["/"].used_perc, 0)}"
                :orientation "h"
                :active false
                :valign "center"
            )
    )
)
